* elisp-eval

Evaluate the expression in the plain buffer instead of the minibuffer.

** Installation

*** Manually

Download repository and it to your load path in your init file:

#+begin_src elisp :eval no

(add-to-list 'load-path "/path/to/elisp-eval/")

(require 'elisp-eval)

#+end_src

*** With use-package and straight

#+begin_src elisp :eval no

(use-package elisp-eval
  :straight (:repo "KarimAziev/elisp-eval" :type git :host github)
  :commands (elisp-eval))

#+end_src

** Commands

+ ~elisp-eval~
Eval expression in *eval-elisp* buffer instead of minibuffer.

This command makes the current buffer the target buffer of
the elisp-eval and displays a buffer named "*eval-elisp*" in another window.

| Key        | Command                         | Description                     |
|------------+---------------------------------+---------------------------------|
| C-<return> | elisp-eval--eval                | eval and stay in window         |
| C-c C-c    | elisp-eval--eval-and-quit       | eval and exit window            |
| C-x 0      | elisp-eval-quit                 | bury buffer                     |
| C-x s      | elisp-eval-save-history         | save history                    |
| C-x C-s    | elisp-eval-save-current-element | save current element            |
| M-n        | elisp-eval-next-history-element | insert next history element     |
| M-p        | elisp-eval-prev-history-element | insert previous history element |
|            |                                 |                                 |

+ ~elisp-eval-region-or-last-sexp~
  Eval active region or sexp at point.

+ ~elisp-eval-cleanup-history~ Cleanup history.


** Customization

+ ~elisp-eval-history-file~
  The filename to save history

+ ~elisp-eval-history-max-size~
  Max size for history.
